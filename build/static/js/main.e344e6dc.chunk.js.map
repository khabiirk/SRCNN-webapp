{"version":3,"sources":["logo.svg","Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","document","body","style","backgroundColor","className","href","id","htmlFor","IconButton","aria-label","color","component","onClick","window","open","App","useState","predicted","setPredicted","selectedFile","setSelectedFile","image","setImage","score","setScore","classes","makeStyles","theme","root","margin","spacing","input","display","paper","padding","textAlign","fontFamily","fontSize","useStyles","Paper","src","onSubmit","e","preventDefault","formData","FormData","append","axios","post","then","res","console","log","data","catch","err","alert","submitForm","accept","type","onChange","file","target","files","URL","createObjectURL","hidden","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e344e6dc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\nimport './Navigation.css'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport IconButton from '@material-ui/core/IconButton';\nimport GitHub from '@material-ui/icons/GitHub';\n\nconst Navigation = () => {\n    document.body.style.backgroundColor = \"#444\";\n    return (\n        <nav className=\"navbar navbar-expand-lg\">\n            <div className=\"container-fluid\">\n                <a className=\"navbar-brand\" href=\"#\">SRCNN</a>\n\n            </div>\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                    <li className=\"nav-item\">\n                     \n                        \n                        <label htmlFor=\"\">\n                            <IconButton aria-label=\"Github.com\" color=\"primary\" component=\"span\" onClick = {() => window.open(\"https://github.com/khabiirk\")}>\n                                <GitHub/>\n                            </IconButton>\n        </label>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    )\n}\n\nexport default Navigation;","import logo from './logo.svg';\nimport './App.css';\nimport React, {useState} from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport IconButton from '@material-ui/core/IconButton';\nimport Navigation from './Navigation';\nfunction App() {\n  const [predicted, setPredicted] = useState('/test.png');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [image, setImage] = useState('/8.png');\n  const [score, setScore] = useState(0);\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"image\", selectedFile);\n    axios.post('http://127.0.0.1:5000/predict', formData)\n    .then (res => {\n      console.log(res);\n      setPredicted('data:image/png;base64,' + res.data.data);\n      setScore(res.data.score);\n    })\n    .catch(err => {\n      alert(err);\n    })\n  }\n\n  const setFileAndImage = (file) => {\n    setSelectedFile(file);\n    if (file != null){\n      setImage(URL.createObjectURL(file));\n      setPredicted(null);\n    } else {\n      setImage(null);\n      setPredicted(null);\n\n    }\n    \n    \n  }\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n    input: {\n      display: 'none',\n    },\n\n    paper: {\n      padding: theme.spacing(1),\n      textAlign: 'center',\n      color: 'white',\n      fontFamily: 'Menlo',\n      fontSize: '20px',\n      backgroundColor: '#222'\n\n    },\n  }));\n  const classes = useStyles();\n  \n  \n \n  return (\n    <div className=\"App\">\n      <Navigation/>\n      <div className =\"con\">\n      \n      <div className='Container'>\n        \n          <Paper className={`grid ${classes.paper}`}>\n            <p>{image == null ? \"\" : \"Original\"}</p>\n            <img src={image}></img>\n          </Paper>\n       \n        \n          <Paper className={`grid ${classes.paper}`}>\n            <p>{predicted == null ? \"\": 'Enhanced'}</p>\n            <img src = { predicted }></img>\n          </Paper>\n        \n      </div>\n      <p className=\"score\">{ score > 0 ? `PNSR: ${score}` : \"\"}</p>\n\n\n      <form onSubmit={e => submitForm(e)} >\n        <input\n          accept=\"image/*\"\n          className={classes.input}\n          id='icon-button-file'\n          type='file'\n          onChange={e => setFileAndImage(e.target.files[0])}\n          />\n          <label htmlFor=\"icon-button-file\">\n            <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n              <PhotoCamera />\n            </IconButton>\n        </label>\n          <br/>\n          {console.log(selectedFile)}\n          <button type=\"submit\" hidden = { selectedFile == null ? true : false }>\n\n            Enhance!\n          </button>\n      </form>\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}